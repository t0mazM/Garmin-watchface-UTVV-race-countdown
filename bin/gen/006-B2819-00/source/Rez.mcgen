import Toybox.Lang;
using Toybox.WatchUi;
using Toybox.WatchUi as Ui;
using Toybox.Graphics;
using Toybox.Graphics as Gfx;

module Rez {
    module Drawables {
        (:initialized) var utvvlogo as Symbol;
        (:initialized) var batteryIcon as Symbol;
        (:initialized) var heartIcon as Symbol;
        (:initialized) var stepsIcon as Symbol;
        (:initialized) var blthIcon as Symbol;
        (:initialized) var emperor_logo as Symbol;
        (:initialized) var centurion_logo as Symbol;
        (:initialized) var legion_logo as Symbol;
        (:initialized) var gladiator_logo as Symbol;
        (:initialized) var kids_logo as Symbol;
        (:initialized) var castra_logo as Symbol;
        (:initialized) var bear as Symbol;
        (:initialized) var dog as Symbol;
        (:initialized) var fox as Symbol;
        (:initialized) var mouse as Symbol;
        (:initialized) var turtle as Symbol;
        (:initialized) var LauncherIcon as Symbol;

        class MenuForeground extends WatchUi.Drawable {

            function initialize() {
                Drawable.initialize({});
            }

            function draw(dc as Graphics.Dc) as Void {
                if (self has :isVisible) {
                    if (!self.isVisible) {
                        return;
                    }
                }

                dc.setColor(Gfx.COLOR_TRANSPARENT, Graphics.COLOR_TRANSPARENT);
                dc.fillRectangle((0 + 0), (0 + 0), (240 - 0), (240 - 0));
                dc.setColor(Graphics.COLOR_TRANSPARENT, Gfx.COLOR_TRANSPARENT);

            }
        }
    } // Drawables

    module Fonts {
    } // Fonts

    module JsonData {
    } // JsonData

    module Layouts {
        function WatchFace(dc as Graphics.Dc) as Array<WatchUi.Drawable> {
            var rez_cmp_local_text_TimeLabel = new WatchUi.Text({:identifier=>"TimeLabel", :color=>Graphics.COLOR_BLUE, :locX=>(240 * 0.5), :locY=>((240 - dc.getFontHeight(Graphics.FONT_LARGE)) * 0.5), :justification=>Graphics.TEXT_JUSTIFY_CENTER, :font=>Graphics.FONT_LARGE});

            return [rez_cmp_local_text_TimeLabel] as Array<WatchUi.Drawable>;
        }
    } // Layouts

    module Menus {
    } // Menus

    module Strings {
        (:initialized) var AppName as Symbol;
    } // Strings
} // Rez
